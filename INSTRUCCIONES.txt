PROYECTO N1


HOMEWORK 1

Habilidades y competencias que desarrollar√©...

* Manejo de repositorios con Git y Github.

* Preparaci√≥n del entorno de trabajo.

* Dise√±o de P√°gina Web con HTML y CSS.

--------------------------------------------------

ACTIVIDAD 01

1. Preparaci√≥n del proyecto en entorno local...

2. Aceptar la invitaci√≥n recibida al repositorio template del Proyecto Integrador de M1.

3. Clonar el repositorio en una carpeta a elecci√≥n.

4. Instalar las dependencias.

5. Recorrer los archivos que est√°n dentro de la carpeta del proyecto y familiarizarse con la estructura.

--------------------------------------------------


ACTIVIDAD 02

Dise√±o de p√°gina web de presentaci√≥n personal...

1. Generar el archivo ‚Äúreset.css‚Äù en la carpeta correspondiente.

2. Vincular ambos archivos CSS con el documento index.html.

3. Dise√±ar una p√°gina web de presentaci√≥n personal que contendr√° 3 secciones:
	A) Secci√≥n ‚ÄúSobre Mi‚Äù, con un breve p√°rrafo de 			presentaci√≥n.
	B) Secci√≥n ‚ÄúMis Tecnolog√≠as Favoritas‚Äù que 			enumera mediante el formato deseado las 			tecnolog√≠as favoritas. Se sugiere utilizar 			tarjetas con logos.
	C) Secci√≥n ‚ÄúMis Actividades Favoritas‚Äù, la cual 		contendr√°:
		* Un serie de Inputs para que el usuario 		pueda ingresar T√çTULO, DESCRIPCI√ìN y URL 		DE IMAGEN. 
		* Un contenedor que luego mostrar√° las 				tarjetas con las actividades creadas.

--------------------------------------------------------

ACTIVIDAD 03

- Puedes agregar al dise√±o cualquier tipo de elementos, estilos, im√°genes, que se desees.

- Pushear los cambios hechos sobre el proyecto al repositorio remoto.

********************************************************

HOMEWORK 2

Habilidades y competencias que desarrollar√©...

* Implementaci√≥n de clases de ECMAScript 6 con sus propiedades y m√©todos correspondientes.

* Interacci√≥n con Inteligencia Artificial para evaluar la resoluci√≥n.

--------------------------------------------------------

ACTIVIDAD 01

Implementaci√≥n de clases ‚ÄúActivity‚Äù y ‚ÄúRepository‚Äù...

1. Vincular el documento ‚Äúindex.html‚Äù con el m√≥dulo ‚Äúindex.js‚Äù de la carpeta ‚Äúscripts‚Äù mediante la etiqueta <script>.

2. Implementar la clase Activity, la cual representar√° a las actividades que se crear√°n. Debe tener las propiedades:

	a) id
	b) title
	c) description
	d) imgUrl

3. Implementar la clase Repository, la cual se encargar√° de crear, almacenar y manipular las actividades. La misma tendr√°:

	a) Propiedad activities => Un arreglo para 			almacenar las actividades.
	b) M√©todo getAllActivities => Debe retornar un 			arreglo con todas las actividades.
	c) M√©todo createActivity => Debe instanciar una 		actividad con los datos correspondientes 			y almacenarla en su arreglo.
	d) EXTRA CREDIT. M√©todo deleteActivity => Debe 			recibir un id y filtrar el arreglo para 			eliminar la actividad correspondiente.

--------------------------------------------------------

ACTIVIDAD 02

ü§ñ Consulta a ChatGPT para evaluar resoluci√≥n...

1. Interactuar con ChatGTP para hacerle consultas sobre la resoluci√≥n desarrollada. Se sugiere:

	a) Preguntar a la IA si interpreta correctamente 	qu√© hace el c√≥digo.
	b) Consultar si tiene alguna sugerencia o mejora 	que aportar al c√≥digo.
	c) Consultar si cree que hay otra forma de 			realizar la misma implementaci√≥n.

********************************************************

HOMEWORK 3

Habilidades y competencias que desarrollar√©...

* Manipulaci√≥n del DOM a trav√©s de DOM API.

--------------------------------------------------------

ACTIVIDAD 01

Implementar las funciones necesarias para lograr la funcionalidad de la secci√≥n ‚ÄúMis Actividades Favoritas‚Äù.

1. Crear una instancia de la clase Repository con la que trabajaremos en toda la actividad.

--------------------------------------------------------

ACTIVIDAD 02

Implementar una funci√≥n que tomar√° UNA instancia de Activity y la convertir√° en elemento HTML. Esta funci√≥n nos servir√° m√°s adelante. La funci√≥n deber√°:

1. Recibir por par√°metro un objeto instancia de Activity.

2. Extraer sus propiedades en variables utilizando destructuring.

3. Crear los elementos HTML que formar√°n parte de la tarjeta. Ej: <h3> para el t√≠tulo, <p> para la descripci√≥n, <img> para la imagen.

4. Asignar los valores a las propiedades correspondientes a cada uno de los elementos. Ej: a la propiedad innerHTML del elemento del t√≠tulo, asignar el valor correspondiente. A la propiedad src del elemento de la imagen, asignar el valor correspondiente.

5. Agregar a los elementos las clases CSS correspondientes que hayas implementado para darles estilos.

6. Crear un elemento <div> que ser√° la tarjeta donde incluiremos todos los dem√°s elementos.

7. ‚ÄúAppendear‚Äù al nuevo <div> los elementos creados anteriormente .

8. Asignar al <div> la clase CSS que tengas implementada para darle estilos.

9. Retornar el <div> finalizado con todos los elementos correspondientes dentro.

--------------------------------------------------------

ACTIVIDAD 03

Implementar una funci√≥n que se encargar√° de ‚Äúconvertir‚Äù TODAS las instancias de Activity en elementos HTML para agregarlos al contenedor correspondiente. La funci√≥n deber√°:

1. Seleccionar el contenedor donde queremos agregar las actividades.

2. Vaciar el contenido actual del contenedor. Se puede hacer manipulando la propiedad innerHTML.

3. Obtener el listado completo de actividades mediante el m√©todo correspondiente de una instancia de Repository.

4. ‚ÄúMapear‚Äù el listado de actividades para convertirlos todos en elementos HTML. Para ello utilizar el m√©todo ‚Äúmap‚Äù, aprovechando como callback la funci√≥n que hicimos en el punto anterior. Guardar el resultado del mapeo en una nueva variable.

5. ‚ÄúAppendear‚Äù todos los elementos HTML del nuevo array dentro del contenedor seleccionado. Para ello puedes utilizar el m√©todo forEach.

--------------------------------------------------------

ACTIVIDAD 04

Implementar la funci√≥n handler que se ejecutar√° al disparar el evento del bot√≥n. La misma deber√°:

1. Seleccionar los inputs de title, description e imgUrl.

2. Tomar los valores ingresados en los inputs y guardarlos en variables.

3. Validar que estos valores est√©n completos. De lo contrario deber√° cortar el proceso y mostrar un mensaje avisando al usuario de que hay datos incompletos.

4. Llamar al m√©todo correspondiente de la instancia de Repository para crear una nueva actividad.

5. Invocar la funci√≥n que implementamos en el punto anterior para ‚Äúrefrescar‚Äù el contenedor de actividades.

--------------------------------------------------------

ACTIVIDAD 05

1. Seleccionar el bot√≥n que disparar√° el evento de agregar actividad y agregar un Event Listener. El evento, al dispararse, debe ejecutar la funci√≥n que creamos en el punto anterior.


2. EXTRA CREDIT. Implementar la funcionalidad de eliminar tarjetas del contenedor al hacer click sobre ellas o sobre alg√∫n nuevo bot√≥n que podamos agregar a las mismas. Eres libre de encarar esta funcionalidad de la manera que consideres adecuada. ü§ñ Puedes apoyarte en la IA para ayudarte a realizar este punto. ü§ñ




